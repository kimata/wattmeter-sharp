name: Regression
on:
    push:

permissions:
    contents: read
    pages: write
    id-token: write
    checks: write
    pull-requests: write

jobs:
    test:
        runs-on: ubuntu-latest

        env:
            TZ: "Asia/Tokyo"

        strategy:
            matrix:
                python-version: ["3.12"]

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Set locale
              run: |
                  sudo locale-gen ja_JP.UTF-8

            - name: Install system dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libasound2-dev portaudio19-dev

            - name: Install uv
              run: |
                  curl -LsSf https://astral.sh/uv/install.sh | sh

            - name: Cache python modules
              id: cache-python-modules
              uses: actions/cache@v4
              env:
                  cache-name: cache-python-modules
              with:
                  path: $HOME/.cache
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pyproject.toml') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - name: Install Dependencies
              run: |
                  uv sync

            - name: Run Tests
              run: uv run pytest --numprocesses=auto --junit-xml=tests/evidence/junit.xml tests/test_basic.py

            - name: Publish Test Results
              uses: dorny/test-reporter@v1
              if: success() || failure()
              with:
                  name: test results
                  path: tests/evidence/junit.xml
                  reporter: java-junit

            - name: Upload coverage file
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: pytest
                  path: tests/evidence

            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  path: tests/evidence

    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: test
        if: github.ref == 'refs/heads/main'
        steps:
            - name: Download test results
              id: deployment
              uses: actions/deploy-pages@v4
